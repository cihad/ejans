application = 'ejans'
unicorn_workers = 1
worker_queues = ['*']

rails_env = 'production'
user = 'deployer'
group = 'deployer'
deploy_to = "/home/deployer/applications/ejans"
current_path = "#{deploy_to}/current"
shared_path = "#{deploy_to}/shared"

base_dir = "#{shared_path}/bluepill"
log_file = "#{shared_path}/log/bluepill.log"

Bluepill.application(application, :base_dir => base_dir, :log_file => log_file) do |app|

  app.working_dir = current_path
  app.uid = user
  app.gid = group

  # Unicorn
  app.process("unicorn") do |process|
    process.pid_file = "#{current_path}/tmp/pids/unicorn.pid"
    process.stdout = process.stderr = "#{shared_path}/log/bluepill.log"
    process.environment = { 'RAILS_ENV' => rails_env }

    # Unicorn needs to be invoked using a path which includes 'current', 
    # otherwise it tries to restart with the executable installed in an old release dir (which get cleaned)
    process.start_command = "/etc/init.d/unicorn_#{application} start"
    process.stop_command = "/etc/init.d/unicorn_#{application} stop"
    process.restart_command = "/etc/init.d/unicorn_#{application} restart"

    process.start_grace_time = 30.seconds
    process.stop_grace_time = 5.seconds
    process.restart_grace_time = 13.seconds
  end

  # Resque
  if defined?(worker_queues)
    worker_queues.each_with_index do |queue_list, i|
      app.process("resque-#{i}") do |process|
        process.group = "resque"

        process.pid_file = "#{current_path}/tmp/pids/resque_work_#{i}.pid"
        process.stdout = process.stderr = "#{current_path}/log/resque_work_#{i}.log"
        process.environment = {
          'PIDFILE'   => "#{current_path}/tmp/pids/resque_work_#{i}.pid",
          'RAILS_ENV' => rails_env,
          'QUEUE'     => queue_list
        }
        process.start_command = "bundle exec rake resque:work"
        process.stop_command = "kill -QUIT {{PID}}"
        process.daemonize = true
      end
    end
  end

  # Nginx
  app.process("nginx") do |process|
    process.pid_file "/var/run/nginx.pid"

    process.start_command "/etc/init.d/nginx start"
    process.stop_command "/etc/init.d/nginx stop"

    process.start_grace_time = 10.seconds
    process.stop_grace_time = 10.seconds
    process.restart_grace_time = 10.seconds
  end
end